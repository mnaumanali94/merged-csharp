/*
 * CustomHeaderSignature.Standard
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
using System;
using CustomHeaderSignature.Standard;
using Merged.Standard;
using Merged.Standard.Http.Response;
using Merged.Standard.Http.Client;
using Merged.Standard.Exceptions;

namespace CustomHeaderSignature.Standard.Controllers
{
    public class CustomHeaderBaseController : BaseController
    {
        /// <summary>
        /// Validates the response against HTTP errors defined at the API level
        /// </summary>
        /// <param name="_response">The response recieved</param>
        /// <param name="_context">Context of the request and the recieved response</param>
        protected void ValidateResponse(HttpResponse _response, HttpContext _context)
        {
            if ((_response.StatusCode < 200) || (_response.StatusCode > 208)) //[200,208] = HTTP OK
            {
                throw new APIException(@"HTTP Response Not OK", _context);
            }

        }

        protected CustomHeaderBaseController(Configuration config) :base (config)
        {
        }

        /// <summary>
        /// Contructor to initialize the controller with the specified configuration and HTTP callback
        /// </summary>
        /// <param name="config">Configuration for the API</param>
        /// <param name="httpCallBack">HTTP callback to catch before/after HTTP request/response events</param>
        protected CustomHeaderBaseController(Configuration config, HttpCallBack httpCallBack) : base(config,httpCallBack)
        {
        }
    }
} 